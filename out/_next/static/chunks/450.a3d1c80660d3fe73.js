"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[450],{96450:function(e,t,r){r.r(t),r.d(t,{MetamaskAdapter:function(){return j}});var n=r(4942),a=r(92003),i=r.n(a),o=r(95844),s=r(13631),c=r(20917),l=r(96245),h=r(2043),d=r.n(h);const p="eip155",m="solana",u="other",E="eip155",g=(e,t)=>{if(e===u)return null;const r=t?"number"===typeof t?t:parseInt(t,16):(e=>{if(e===p)return 1;if(e===m)return 1;throw new Error(`Chain namespace ${e} is not supported`)})(e);return e===p?(e=>1===e?{chainNamespace:p,chainId:"0x1",rpcTarget:"https://rpc.ankr.com/eth",displayName:"Ethereum Mainnet",blockExplorer:"https://etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:3===e?{chainNamespace:p,chainId:"0x3",rpcTarget:"https://rpc.ankr.com/eth_ropsten",displayName:"Ropsten Testnet",blockExplorer:"https://ropsten.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:4===e?{chainNamespace:p,chainId:"0x4",rpcTarget:"https://rpc.ankr.com/eth_rinkeby",displayName:"Rinkeby Testnet",blockExplorer:"https://rinkeby.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:5===e?{chainNamespace:p,chainId:"0x5",rpcTarget:"https://rpc.ankr.com/eth_goerli",displayName:"Goerli Testnet",blockExplorer:"https://goerli.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:137===e?{chainNamespace:p,chainId:"0x89",rpcTarget:"https://rpc.ankr.com/polygon",displayName:"Polygon Mainnet",blockExplorer:"https://polygonscan.com",ticker:"MATIC",tickerName:"Polygon"}:80001===e?{chainNamespace:p,chainId:"0x13881",rpcTarget:"https://rpc.ankr.com/polygon_mumbai",displayName:"Polygon Mumbai Testnet",blockExplorer:"https://mumbai.polygonscan.com/",ticker:"MATIC",tickerName:"Polygon"}:56===e?{chainNamespace:p,chainId:"0x38",rpcTarget:"https://rpc.ankr.com/bsc",displayName:"Binance SmartChain Mainnet",blockExplorer:"https://bscscan.com",ticker:"BNB",tickerName:"Binance SmartChain"}:97===e?{chainNamespace:p,chainId:"0x61",rpcTarget:"https://rpc.ankr.com/bsc_testnet_chapel",displayName:"Binance SmartChain Testnet",blockExplorer:"https://testnet.bscscan.com",ticker:"BNB",tickerName:"Binance SmartChain"}:25===e?{chainNamespace:p,chainId:"0x19",rpcTarget:"https://rpc.cronos.org",displayName:"Cronos Mainnet",blockExplorer:"https://cronoscan.com/",ticker:"CRO",tickerName:"Cronos"}:338===e?{chainNamespace:p,chainId:"0x152",rpcTarget:"https://rpc-t3.cronos.org/",displayName:"Cronos Testnet",blockExplorer:"https://cronoscan.com/",ticker:"CRO",tickerName:"Cronos"}:8217===e?{chainNamespace:p,chainId:"0x2019",rpcTarget:"https://public-node-api.klaytnapi.com/v1/cypress",displayName:"Klaytn Mainnet",blockExplorer:"https://scope.klaytn.com",ticker:"KLAY",tickerName:"Klaytn"}:null)(r):e===m?(e=>1===e?{chainNamespace:m,chainId:"0x1",rpcTarget:"https://rpc.ankr.com/solana",displayName:"Solana Mainnet",blockExplorer:"https://explorer.solana.com",ticker:"SOL",tickerName:"Solana"}:2===e?{chainNamespace:m,chainId:"0x2",rpcTarget:"https://api.testnet.solana.com",displayName:"Solana Testnet",blockExplorer:"https://explorer.solana.com?cluster=testnet",ticker:"SOL",tickerName:"Solana"}:3===e?{chainNamespace:m,chainId:"0x3",rpcTarget:"https://api.devnet.solana.com",displayName:"Solana Devnet",blockExplorer:"https://explorer.solana.com?cluster=devnet",ticker:"SOL",tickerName:"Solana"}:null)(r):null};class N extends s.s{constructor(e,t){super(t),(0,n.Z)(this,"code",void 0),(0,n.Z)(this,"message",void 0),this.code=e,this.message=t||"",Object.defineProperty(this,"name",{value:"Web3AuthError"})}toJSON(){return{name:this.name,code:this.code,message:this.message}}toString(){return JSON.stringify(this.toJSON())}}class C extends N{constructor(e,t){super(e,t),Object.defineProperty(this,"name",{value:"WalletInitializationError"})}static fromCode(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new C(e,`${C.messages[e]}, ${t}`)}static notFound(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return C.fromCode(5001,e)}static notInstalled(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return C.fromCode(5002,e)}static notReady(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return C.fromCode(5003,e)}static windowBlocked(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return C.fromCode(5004,e)}static windowClosed(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return C.fromCode(5005,e)}static incompatibleChainNameSpace(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return C.fromCode(5006,e)}static duplicateAdapterError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return C.fromCode(5007,e)}static invalidProviderConfigError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return C.fromCode(5008,e)}static providerNotReadyError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return C.fromCode(5009,e)}static rpcConnectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return C.fromCode(5010,e)}static invalidParams(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return C.fromCode(5011,e)}static invalidNetwork(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return C.fromCode(5013,e)}}(0,n.Z)(C,"messages",{5e3:"Custom",5001:"Wallet is not found",5002:"Wallet is not installed",5003:"Wallet is not ready yet",5004:"Wallet window is blocked",5005:"Wallet window has been closed by the user",5006:"Incompatible chain namespace provided",5007:"Adapter has already been included",5008:"Invalid provider Config",5009:"Provider is not ready yet",5010:"Failed to connect with rpc url",5011:"Invalid params passed in",5013:"Invalid network provided"});class w extends N{constructor(e,t){super(e,t),Object.defineProperty(this,"name",{value:"WalletLoginError"})}static fromCode(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new w(e,`${w.messages[e]}${t}`)}static connectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return w.fromCode(5111,e)}static disconnectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return w.fromCode(5112,e)}static notConnectedError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return w.fromCode(5113,e)}static popupClosed(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return w.fromCode(5114,e)}}function f(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function v(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?f(Object(r),!0).forEach((function(t){(0,n.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):f(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}(0,n.Z)(w,"messages",{5e3:"Custom",5111:"Failed to connect with wallet",5112:"Failed to disconnect from wallet",5113:"Wallet is not connected",5114:"Wallet popup has been closed by the user"});const y={OPENLOGIN:"openlogin",WALLET_CONNECT_V1:"wallet-connect-v1",WALLET_CONNECT_V2:"wallet-connect-v2"},k=v({TORUS_SOLANA:"torus-solana",PHANTOM:"phantom",SOLLET:"sollet",SOLLET_EXTENSION:"sollet-extension",SOLFLARE:"solflare",SLOPE:"slope"},y),O=v({TORUS_EVM:"torus-evm",METAMASK:"metamask",COINBASE:"coinbase"},y),T=v(v({},O),k);function b(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function I(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?b(Object(r),!0).forEach((function(t){(0,n.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):b(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const A="external",D={NOT_READY:"not_ready",READY:"ready",CONNECTING:"connecting",CONNECTED:"connected",DISCONNECTED:"disconnected",ERRORED:"errored"},P=I(I({},D),{},{ADAPTER_DATA_UPDATED:"adapter_data_updated"});class _ extends o.Ue{constructor(){super(...arguments),(0,n.Z)(this,"adapterData",{}),(0,n.Z)(this,"sessionTime",86400),(0,n.Z)(this,"chainConfig",null)}get chainConfigProxy(){return this.chainConfig?I({},this.chainConfig):null}setChainConfig(e){if(this.status===D.READY)return;if(!e.chainNamespace)throw C.notReady("ChainNamespace is required while setting chainConfig");const t=g(e.chainNamespace,e.chainId);this.chainConfig=I(I({},t),e)}setAdapterSettings(e){}checkConnectionRequirements(){if(this.name!==T.WALLET_CONNECT_V1||this.status!==D.CONNECTING){if(this.status===D.CONNECTING)throw C.notReady("Already connecting");if(this.status===D.CONNECTED)throw w.connectionError("Already connected");if(this.status!==D.READY)throw w.connectionError("Wallet adapter is not ready yet, Please wait for init function to resolve before calling connect/connectTo function");if(!this.clientId)throw w.connectionError("Please initialize Web3Auth with a valid clientId in constructor")}}checkInitializationRequirements(){if(this.status!==D.NOT_READY){if(this.status===D.CONNECTED)throw C.notReady("Already connected");if(this.status===D.READY)throw C.notReady("Adapter is already initialized")}}updateAdapterData(e){this.adapterData=e,this.emit(P.ADAPTER_DATA_UPDATED,{adapterName:this.name,data:e})}}const S="https://authjs.web3auth.io";var R=d().getLogger("web3auth-logger");function x(e){let t,r=!1,n=0;try{t=window[e],r=!0,n=t.length;const a="__storage_test__";return t.setItem(a,a),t.removeItem(a),!0}catch(a){const e=a;return!(!e||22!==e.code&&1014!==e.code&&"QuotaExceededError"!==e.name&&"NS_ERROR_DOM_QUOTA_REACHED"!==e.name||!r||0===n)}}class M extends _{constructor(e){super(),(0,n.Z)(this,"clientId",void 0),this.clientId=e.clientId}async authenticateUser(){var e;if(!this.provider||null===(e=this.chainConfig)||void 0===e||!e.chainId)throw w.notConnectedError();const{chainNamespace:t,chainId:r}=this.chainConfig;if(this.status!==D.CONNECTED)throw w.notConnectedError("Not connected with wallet, Please login/connect first");const n=await this.provider.request({method:"eth_accounts"});if(n&&n.length>0){const e=(a=n[0],i=this.name,x("localStorage")?localStorage.getItem(`${a.toLowerCase()}_${i}`):null);if(e){if(!(e=>{const t=(0,l.Z)(e);return!t.exp||t.exp<Math.floor(Date.now()/1e3)})(e))return{idToken:e}}const o={domain:window.location.origin,uri:window.location.href,address:n[0],chainId:parseInt(r,16),version:"1",nonce:Math.random().toString(36).slice(2),issuedAt:(new Date).toISOString()},s=await(async(e,t)=>{const r={payload:e,header:{t:"solana"===t?"sip99":"eip191"},network:"solana"===t?"solana":"ethereum"},n=await(0,c.v_)(`${S}/siww/get`,r);if(!n.success)throw new Error("Failed to authenticate user, Please reach out to Web3Auth Support team");return n.challenge})(o,t),h=await this.provider.request({method:"personal_sign",params:[s,n[0]]}),d=await(async(e,t,r,n,a,i)=>{const o={signature:{s:t,t:"solana"===e?"sip99":"eip191"},message:r,issuer:n,audience:window.location.hostname,timeout:a},s=await(0,c.v_)(`${S}/siww/verify`,o,{headers:{client_id:i,wallet_provider:n}});if(!s.success)throw R.error("Failed to authenticate user, ,message verification failed",s.error),new Error("Failed to authenticate user, ,message verification failed");return s.token})(t,h,s,this.name,this.sessionTime,this.clientId);return((e,t,r)=>{x("localStorage")&&localStorage.setItem(`${e.toLowerCase()}_${t}`,r)})(n[0],this.name,d),{idToken:d}}var a,i;throw w.notConnectedError("Not connected with wallet, Please login/connect first")}async disconnect(){if(this.status!==D.CONNECTED)throw w.disconnectionError("Not connected with wallet");const e=await this.provider.request({method:"eth_accounts"});var t,r;e&&e.length>0&&(t=e[0],r=this.name,x("localStorage")&&localStorage.removeItem(`${t.toLowerCase()}_${r}`))}}class j extends M{constructor(e){super(e),(0,n.Z)(this,"adapterNamespace",E),(0,n.Z)(this,"currentChainNamespace",p),(0,n.Z)(this,"type",A),(0,n.Z)(this,"name",T.METAMASK),(0,n.Z)(this,"status",D.NOT_READY),(0,n.Z)(this,"rehydrated",!1),(0,n.Z)(this,"metamaskProvider",null),this.chainConfig=(null===e||void 0===e?void 0:e.chainConfig)||null,this.sessionTime=(null===e||void 0===e?void 0:e.sessionTime)||86400}get provider(){return this.status===D.CONNECTED&&this.metamaskProvider?this.metamaskProvider:null}set provider(e){throw new Error("Not implemented")}async init(e){if(super.checkInitializationRequirements(),this.metamaskProvider=await i()({mustBeMetaMask:!0}),!this.metamaskProvider)throw C.notInstalled("Metamask extension is not installed");this.status=D.READY,this.emit(P.READY,T.METAMASK);try{R.debug("initializing metamask adapter"),e.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(t){this.emit(P.ERRORED,t)}}setAdapterSettings(e){this.status!==D.READY&&(null!==e&&void 0!==e&&e.sessionTime&&(this.sessionTime=e.sessionTime),null!==e&&void 0!==e&&e.clientId&&(this.clientId=e.clientId))}async connect(){if(super.checkConnectionRequirements(),this.chainConfig||(this.chainConfig=g(p,1)),this.status=D.CONNECTING,this.emit(P.CONNECTING,{adapter:T.METAMASK}),!this.metamaskProvider)throw w.notConnectedError("Not able to connect with metamask");try{await this.metamaskProvider.request({method:"eth_requestAccounts"});const{chainId:e}=this.metamaskProvider;if(e!==this.chainConfig.chainId&&await this.switchChain(this.chainConfig),this.status=D.CONNECTED,!this.provider)throw w.notConnectedError("Failed to connect with provider");return this.provider.once("disconnect",(()=>{this.disconnect()})),this.emit(P.CONNECTED,{adapter:T.METAMASK,reconnected:this.rehydrated}),this.provider}catch(e){throw this.status=D.READY,this.rehydrated=!1,this.emit(P.ERRORED,e),w.connectionError("Failed to login with metamask wallet")}}async disconnect(){var e;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};await super.disconnect(),null===(e=this.provider)||void 0===e||e.removeAllListeners(),t.cleanup?(this.status=D.NOT_READY,this.metamaskProvider=null):this.status=D.READY,this.rehydrated=!1,this.emit(P.DISCONNECTED)}async getUserInfo(){if(this.status!==D.CONNECTED)throw w.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async switchChain(e){if(!this.metamaskProvider)throw w.notConnectedError("Not connected with wallet");try{await this.metamaskProvider.request({method:"wallet_switchEthereumChain",params:[{chainId:e.chainId}]})}catch(t){if(4902!==t.code)throw t;await this.metamaskProvider.request({method:"wallet_addEthereumChain",params:[{chainId:e.chainId,chainName:e.displayName,rpcUrls:[e.rpcTarget]}]})}}}}}]);